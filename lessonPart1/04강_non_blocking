6 분
Node.js의 Non-blocking이라는 장점을 알아보자 (CGV 예매사이트)





nodejs의 특징이 먼지 인터넷에 찾아보면 

-Event-driven, Non-blocking I/O 가 있는데 이게 무엇인지 이번시간에 알아보자





Node.js를 Non-blocking 이라는 장점 때문에 사용합니다.  

Non-blocking이라는 특성을 일단 예시를 들어서 설명해드리겠습니다.


일단 서버를 하나 만들었다고 가정합시다. CGV.com 같은 온라인 영화예매 사이트입니다. 

서버는 요청처리하는 기계랬죠? 이 서버는 그냥 사용자가 "영화 1석 예매해주세요~" 하면 온라인 티켓 보내주는 사이트라고 보시면 됩니다. 

일반 프로그래밍언어로 만든 서버 vs Node.js 서버 두 경우를 한번 비교해드릴게요. 




1. 일반 프로그래밍 언어로 만든 서버

요청1) 영화 1장 예매좀요

요청2) 영화 1장 예매좀요

요청3) 영화 200장 예매좀요

요청4) 영화 1장 예매좀요


이렇게 4개의 요청이 차례로 들어왔을 경우, 위에서 부터 차례로 하나씩 처리해줍니다. 

그런데 중간에 시간이 오래걸리는 요청이 하나 있죠? 요청3) 영화 200장 예매 라는 요청입니다. 

영화 1장 예매가 1초 걸린다고 했을 때 이건 200초 이상 걸리는 무거운 작업입니다. 

그럼 요청3)에서 서버가 200초동안 열심히 요청을 처리합니다.

다음작업으로 못넘어감.


처리 순서는 요청1 - 요청2 - 요청3 (200초 대기) - 요청4 이렇게 되겠죠. 

요청4에서 아마 불만이 나오지 않을까요?

요청4를 한 사람은 얼마 걸리지도 않는 요청인데 200초를 대기해야한다니... 뭔가 불합리한 느낌도 들고요. 







2. Node.js로 간지나게 만든 서버

요청1) 영화 1장 예매좀요

요청2) 영화 1장 예매좀요

요청3) 영화 200장 예매좀요

요청4) 영화 1장 예매좀요


이렇게 4개의 요청이 차례로 들어왔을 경우, 일단 접수부터 다 받고 빨리 완료된 것부터 처리해줍니다. 

누가 먼저 왔는지 상관없습니다. 그냥 빨리 결과가 나오는 순으로 예매해주는 것입니다.

아마 처리 순서는 요청1 - 요청2 - 요청4 - 요청3 이런게 되겠죠. 

그래서 아까 요청4 했던 사람도 빠르게 영화표를 받아볼 수 있습니다. 


Node.js는 그냥 이렇게 완료가 빨리된 것부터 처리할 수 있게 설계된 런타임입니다.

왜 그런지 동작 원리가 궁금하신 분들은 Event Loop에 대해 검색해보십시오.

저보다 설명잘하는 유튜브 영상이 하나 나옵니다.

(근데 영어임 ㅅㄱ)





영화티켓 구매하는 예와 같이 Non-blocking을 사용하지 않는 경우에도 서버가 죽지 않게 대처가 가능하다. 

서버를 졸라많이 크게 만들면 가능하다.





각 언어별 사용 분야를 알아보자

Node.js가 강점을 보이는 분야는


바로 SNS, 채팅서비스 웹서버입니다. SNS같은 플랫폼 만들 때 가장 중요한게 '한번에 많은 요청을 감당할 수 있냐' 입니다. 

일반 서버의 경우 1초에 10만개의 요청이 들어오면.. 바로 처리해주기 위해선

- 똑같은 서버를 몇만대 복사해서 만들어 두거나 (Scaling)

- CPU 멀티쓰레딩을 이용하거나

- Node 처럼 Non-blocking 스타일로 코드를 짜거나

합니다. 



반면 Node.js 서버의 경우엔 애초에 설계상 한꺼번에 많은 요청을 받아줄 수 있으니

애초에 서버 덩치를 키울 걱정 자체가 적겠죠.

하지만 처리 속도라든지 이건 다른 문제입니다.

Node.js자체가 연산속도가 빠르다고 유명해진게 아니니까요.

(귀여운 노드쨩에게 피보나치 수열 계산 이런거 시키면 한참 걸립니다)




Node.js로 자주 만드는 것들


1. 노드쨩은 위에서 설명한 SNS, 채팅 서비스에 특화된 언어라고 보시면 됩니다.

이런 서비스는 요청처리에 힘든 수학적 연산을 요구하지 않습니다. 

- 글자를 저쪽에 전달해주기
- 가끔은 여러명에게 전달해주기

이게 끝입니다. 채팅 서비스가 이런 요청 말고 더 필요한 요청이 있나요?

그래서 대량, 하지만 처리가 간단한 요청이 들어오는 채팅, SNS 서비스에 Node.js를 많이 사용합니다. 


2. 노드쨩은 스타트업, 프로토타입 만들기에서도 많이 사용합니다. 

빠르게 시범서비스를 만들고 싶다면 Node.js는 좋은 선택입니다.  

- 일단 초보자에게도 쉽고

- 진짜 템플릿 몇개만 복붙해도 2시간만에 빠르게 서버를 만들 수 있습니다. 

- 갑자기 사용자가 터져서 대량의 요청이 들어와도 나름 감당가능 (서버가 죽진 않음)

- 자바스크립트 문법만으로 프론트, 백엔드 전부 가능하다는 장점




장점만 많이 설명해드리겠습니다.

단점은 .. 처리속도가 떨어질 수 있다, 수학연산이나 이미지처리 같은 라이브러리가 부족할 수 있다, Node.js가 제공하는 Non-blocking 처리방식은 다른 언어에서도 비슷하게 구현 가능하다 이런게 있습니다. 

그래서 수학처리같은거나 이미지처리 같은 먼가 계산이 필요한 아이들은 파이썬으로 서버를 개발함.