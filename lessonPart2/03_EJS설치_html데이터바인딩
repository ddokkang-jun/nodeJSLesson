HTML에 DB데이터 꽂아넣는 법 1 (EJS)




0:00 저번시간 숙제 (POST 요청시 DB에 데이터 저장)

4:00 /list로 방문하면 DB에 저장된 데이터 보여주기

6:10 /list 방문시 HTML 대신 list.ejs 파일 보내주기





/add로 POST요청시 DB에 저장하는 저번시간 숙제는 


이렇게 코드를 짜면 되지 않을까요

app.post('/add', function(요청, 응답){
  응답.send('전송완료');
  db.collection('post').insertOne( { 제목 : 요청.body.title, 날짜 : 요청.body.date } , function(){
    console.log('저장완료')
  });
});

저번시간 데이터저장하던 예제코드를 똑같이 작성하고 안에 내용물만 살짝 바꿨습니다. 

그럼 이제 폼에서 뭔가 전송시킬 때마다 DB에 데이터를 저장합니다. 

그리고 참고로 응답.send() 이 부분은 항상 존재해야합니다. 

전송이 성공하든 실패하든 뭔가 서버에서 보내주어야합니다. 안그러면 브라우저 멈춰요. 

메세지 같은걸 보내주기 싫다면 간단한 응답코드나 아니면 리다이렉트(페이지강제이동)를 해주는 코드도 있습니다.



이제 전송이 잘끝나고 저장도 잘 됐으니 DB에서 정보들을 받아서 사용자에게 

정보들이 잘 저장된 것을 보여주는 페이지를 만들어서 보여주자.




/list로 방문하면 ejs 파일을 보내주자


그냥 HTML 파일만 보내주면 흔히 말하는 Static페이지가 됩니다. 

HTML에 실제 DB 데이터를 넣어서 보내줄 수가 없으니까요. 

그래서 EJS, Pug같은 템플릿 엔진을 사용합니다. 

EJS는 서버 데이터를 HTML에 쉽게쉽게 박아넣을 수 있게 도와주는 일종의 HTML 렌더링 엔진입니다. 

그럼 우리도 이걸 설치해서 DB 데이터를 HTML에 박아넣어보도록 합시다. 




"설치"는 터미널에서 

npm install ejs

설치한 다음

app.set('view engine', 'ejs');

이걸 Server.js 상단에 적어주면 되겠습니다. const 여러개 있는 곳 바로 밑에 적으면 될듯요.

그리고 

app.get("/list", function (요청, 응답) {
  응답.render('list.ejs');
});

이렇게 한다.



EJS 파일 만들기 



EJS 파일은 그냥 html과 똑같이 만들어 쓰시면 됩니다. 

근데 중간중간 EJS 문법으로 데이터를 꽂아넣을 뿐입니다.

그래서 파일을 빨리 하나 만들어봅시다. 

그 전에 주의할점 : "작업폴더 최상단"에 views라는 이름의 폴더를 하나 만드신 후

"views폴더 < list.ejs 파일"을 만드셔아합니다. 

(views/list.ejs)

<!doctype html>
<head>
  index.html에 있던거 전부 복붙
</head>

<body>
  index.html에 있던거 전부 복붙
</body>

</html>

다시한번 강조합니당. list.ejs 파일을 views 라는 폴더를 생성한 뒤에 거기 안에 담으셔야합니다. 

그리고 내부 코드는 그냥 index.html에 있는거 전부 복붙해오시면 되겠습니다. 

끝입니다. 







EJS 파일 기본적인 문법 



당장 쓸 것 딱 두개만 알려드리겠습니다. 

<h2><%= user.name %></h2>
HTML 중간중간에 서버 데이터를 집어넣고 싶을 땐 이렇게 사용합니다. 

<%= 서버에서 보낸 데이터의 변수명 %>

그럼 HTML 글자로 렌더링 됩니다. 끝입니다. 



EJS를 사용하면 HTML에 여러가지 자바스크립트 문법을 사용가능합니다. 

<% if (user) { %>
  <h2><%= user.name %></h2>
<% } %>
HTML에 if문을 적용하거나 반복문을 적용하고 싶을 땐 

<% %> 내부에 자바스크립트 문법을 담으시면 됩니다. 

위의 예제 코드는 user 라는 변수가 참일 때만 내부 <h2> 코드를 보여줄 것입니다. 

이게 끝입니다. 





받아온 데이터를 꽂아넣는 데이터바인딩은 다음시간에 알려줌.